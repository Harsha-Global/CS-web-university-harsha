using System.Threading;

class Shared
{
  public static int[] Data { get; set; } //Store data values generated by producer thread
  public static int DataCount { get;set; } //Total number of values

  static Shared()
  {
    Data = new int[15];
    DataCount = Data.Length;
  }
}

//Represents producer thread
class Producer
{
  public void Produce()
  {
    Console.WriteLine($"{Thread.CurrentThread.Name} started");


    Console.WriteLine($"{Thread.CurrentThread.Name} completed");
  }
}


//Represents consumer thread
class Consumer
{
  public void Consume()
  {
    Console.WriteLine($"{Thread.CurrentThread.Name} started");


    Console.WriteLine($"{Thread.CurrentThread.Name} completed");
  }
}


class Program
{
  static void Main()
  {
    //create objects of Producer and Consumer classes
    Producer producer = new Producer();
    Consumer consumer = new Consumer();

    //create delegate objects of ThreadStart
    ThreadStart threadStart1 = new ThreadStart(producer.Produce);
    ThreadStart threadStart2 = new ThreadStart(consumer.Consume);

    //create thread objects
    Thread producerThread = new Thread(threadStart1) {  Name = "Producer Thread" };
    Thread consumerThread = new Thread(threadStart2) {  Name = "Consumer Thread" };

    //Start threads
    producerThread.Start();
    consumerThread.Start();

    //Join both threads to main thread
    producerThread.Join();
    consumerThread.Join();

    Console.ReadKey();
  }
}